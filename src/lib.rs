//!
//! The compiler common library.
//!

pub(crate) mod abi;
pub(crate) mod base;
pub(crate) mod bitlength;
pub(crate) mod context_value;
pub(crate) mod exit_code;
pub(crate) mod extension;
pub(crate) mod hashes;
pub(crate) mod llvm;
pub(crate) mod size;
pub(crate) mod solidity;
pub(crate) mod vm;
pub(crate) mod vyper;

pub use self::abi::address::CREATE as ABI_ADDRESS_CREATE;
pub use self::abi::address::ECRECOVER as ABI_ADDRESS_ECRECOVER;
pub use self::abi::address::IDENTITY as ABI_ADDRESS_IDENTITY;
pub use self::abi::address::KECCAK256 as ABI_ADDRESS_KECCAK256;
pub use self::abi::address::RIPEMD160 as ABI_ADDRESS_RIPEMD160;
pub use self::abi::address::SHA256 as ABI_ADDRESS_SHA256;
pub use self::abi::error::FORBIDDEN_SEND_TRANSFER as ABI_ERROR_FORBIDDEN_SEND_TRANSFER;
pub use self::abi::memory::OFFSET_DATA_LENGTH as ABI_MEMORY_OFFSET_DATA_LENGTH;
pub use self::abi::memory::OFFSET_DATA_OFFSET as ABI_MEMORY_OFFSET_DATA_OFFSET;
pub use self::abi::memory::SIZE as ABI_MEMORY_SIZE;
pub use self::abi::storage::DEPLOYED_CONTRACTS_COUNTER as ABI_STORAGE_DEPLOYED_CONTRACTS_COUNTER;
pub use self::base::BINARY as BASE_BINARY;
pub use self::base::DECIMAL as BASE_DECIMAL;
pub use self::base::HEXADECIMAL as BASE_HEXADECIMAL;
pub use self::base::OCTAL as BASE_OCTAL;
pub use self::bitlength::BOOLEAN as BITLENGTH_BOOLEAN;
pub use self::bitlength::BYTE as BITLENGTH_BYTE;
pub use self::bitlength::ETH_ADDRESS as BITLENGTH_ETH_ADDRESS;
pub use self::bitlength::FIELD as BITLENGTH_FIELD;
pub use self::bitlength::X32 as BITLENGTH_X32;
pub use self::bitlength::X64 as BITLENGTH_X64;
pub use self::bitlength::ZKEVM_POINTER as BITLENGTH_ZKEVM_POINTER;
pub use self::context_value::ContextValue;
pub use self::exit_code::FAILURE as EXIT_CODE_FAILURE;
pub use self::exit_code::SUCCESS as EXIT_CODE_SUCCESS;
pub use self::extension::EVM as EXTENSION_EVM;
pub use self::extension::EVM_BINARY as EXTENSION_EVM_BINARY;
pub use self::extension::JSON as EXTENSION_JSON;
pub use self::extension::LLVM_BINARY as EXTENSION_LLVM_BINARY;
pub use self::extension::LLVM_SOURCE as EXTENSION_LLVM_SOURCE;
pub use self::extension::MANIFEST as EXTENSION_MANIFEST;
pub use self::extension::SOLIDITY as EXTENSION_SOLIDITY;
pub use self::extension::VYPER as EXTENSION_VYPER;
pub use self::extension::YUL as EXTENSION_YUL;
pub use self::extension::ZINC as EXTENSION_ZINC;
pub use self::extension::ZKEVM_ASSEMBLY as EXTENSION_ZKEVM_ASSEMBLY;
pub use self::extension::ZKEVM_BINARY as EXTENSION_ZKEVM_BINARY;
pub use self::hashes::keccak256;
pub use self::llvm::FUNCTION_ADDMOD as LLVM_FUNCTION_ADDMOD;
pub use self::llvm::FUNCTION_CONSTRUCTOR as LLVM_FUNCTION_CONSTRUCTOR;
pub use self::llvm::FUNCTION_CXA_THROW as LLVM_FUNCTION_CXA_THROW;
pub use self::llvm::FUNCTION_ENTRY as LLVM_FUNCTION_ENTRY;
pub use self::llvm::FUNCTION_MULMOD as LLVM_FUNCTION_MULMOD;
pub use self::llvm::FUNCTION_PERSONALITY as LLVM_FUNCTION_PERSONALITY;
pub use self::llvm::FUNCTION_SELECTOR as LLVM_FUNCTION_SELECTOR;
pub use self::size::BYTE as SIZE_BYTE;
pub use self::size::ETH_ADDRESS as SIZE_ETH_ADDRESS;
pub use self::size::FIELD as SIZE_FIELD;
pub use self::size::X32 as SIZE_X32;
pub use self::size::X64 as SIZE_X64;
pub use self::size::ZKEVM_POINTER as SIZE_ZKEVM_POINTER;
pub use self::solidity::memory::OFFSET_EMPTY_SLOT as SOLIDITY_MEMORY_OFFSET_EMPTY_SLOT;
pub use self::solidity::memory::OFFSET_MEMORY_POINTER as SOLIDITY_MEMORY_OFFSET_MEMORY_POINTER;
pub use self::solidity::memory::OFFSET_SCRATCH_SPACE as SOLIDITY_MEMORY_OFFSET_SCRATCH_SPACE;
pub use self::solidity::memory::OFFSET_UNALLOCATED_SPACE as SOLIDITY_MEMORY_OFFSET_UNALLOCATED_SPACE;
pub use self::vm::PRODUCTION_NAME as VM_PRODUCTION_NAME;
pub use self::vm::TARGET_NAME as VM_TARGET_NAME;
pub use self::vyper::memory::FREE_LOOP_INDEX as VYPER_MEMORY_OFFSET_FREE_LOOP_INDEX;
pub use self::vyper::memory::FREE_VAR_SPACE as VYPER_MEMORY_OFFSET_FREE_VAR_SPACE;
pub use self::vyper::memory::FREE_VAR_SPACE2 as VYPER_MEMORY_OFFSET_FREE_VAR_SPACE2;
pub use self::vyper::memory::MAXDECIMAL as VYPER_MEMORY_OFFSET_MAXDECIMAL;
pub use self::vyper::memory::MINDECIMAL as VYPER_MEMORY_OFFSET_MINDECIMAL;
pub use self::vyper::memory::RESERVED_MEMORY as VYPER_MEMORY_OFFSET_RESERVED_MEMORY;
